#!/usr/bin/env ruby
#
$LOAD_PATH.unshift(File.expand_path('../../lib', __FILE__))

require "fast"
require "coderay"

arguments = ARGV
pattern = arguments.shift
show_ast = arguments.delete("--ast")
debug = arguments.delete("--debug") || arguments.delete("-d")
files = arguments || '.'
directories =  arguments.select(&File.method(:directory?))

if directories.any?
  files -= directories
  files |= directories.flat_map{|dir|Dir["#{dir}/**/*.rb"]}
  files.uniq!
end


def line_for(result)
  if result.is_a?(Parser::AST::Node)
    result.loc.expression.line
  end
end

def code(result, show_ast=false)
  if result.is_a?(Parser::AST::Node) && !show_ast
    result = result.loc.expression.source
  end
  CodeRay.scan(result, :ruby).term
end

pattern = Fast.expression(pattern)

if debug
  puts "Expression: #{pattern.map(&:to_s)}"
end

files.each do |file|
  results =
    if debug
      Fast.debug { Fast.search_file(pattern, file) }
    else
      begin
        Fast.search_file(pattern, file)
      rescue Parser::SyntaxError
        puts "Ops! An error occurred trying to search in #{pattern.inspect} in #{file}", $!, $@
      end
    end

  next unless results

  results.each do |result|
    next if result.nil? || result == []
    line = [code("# #{file}:#{line_for(result)}"), code(result, show_ast)]
    puts line
  end
end
